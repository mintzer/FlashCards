[{"C:\\Users\\shaym\\Documents\\FlashCards\\flash-cards\\src\\index.js":"1","C:\\Users\\shaym\\Documents\\FlashCards\\flash-cards\\src\\reportWebVitals.js":"2","C:\\Users\\shaym\\Documents\\FlashCards\\flash-cards\\src\\App.js":"3"},{"size":500,"mtime":499162500000,"results":"4","hashOfConfig":"5"},{"size":362,"mtime":499162500000,"results":"6","hashOfConfig":"5"},{"size":3225,"mtime":1611320315271,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"3jqwmc",{"filePath":"11","messages":"12","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15"},"C:\\Users\\shaym\\Documents\\FlashCards\\flash-cards\\src\\index.js",[],["16","17"],"C:\\Users\\shaym\\Documents\\FlashCards\\flash-cards\\src\\reportWebVitals.js",[],"C:\\Users\\shaym\\Documents\\FlashCards\\flash-cards\\src\\App.js",["18"],"import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport 'firebase/database';\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyB5XFTqDIs6fldZGPaOfCSdlSJ5s4sey94\",\n  authDomain: \"flashcards-84ed2.firebaseapp.com\",\n  databaseURL: \"https://flashcards-84ed2-default-rtdb.firebaseio.com\",\n  projectId: \"flashcards-84ed2\",\n  storageBucket: \"flashcards-84ed2.appspot.com\",\n  messagingSenderId: \"448213602820\",\n  appId: \"1:448213602820:web:f9ce9bd16b65122c1e1b51\",\n  measurementId: \"G-V75B780V13\"\n};\n\nvar app = firebase.initializeApp(firebaseConfig);\nconsole.log(app)\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      currentItem: '',\n      username: '',\n      items: []\n    }\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  handleChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n  handleSubmit(e) {\n    e.preventDefault();\n    const itemsRef = firebase.database().ref('items');\n    const item = {\n      title: this.state.currentItem,\n      user: this.state.username\n    }\n    itemsRef.push(item);\n    this.setState({\n      currentItem: '',\n      username: ''\n    });\n  }\n  componentDidMount() {\n    const itemsRef = firebase.database().ref('items');\n    itemsRef.on('value', (snapshot) => {\n      let items = snapshot.val();\n      let newState = [];\n      for (let item in items) {\n        newState.push({\n          id: item,\n          title: items[item].title,\n          user: items[item].user\n        });\n      }\n      this.setState({\n        items: newState\n      });\n    });\n  }\n  removeItem(itemId) {\n    const itemRef = firebase.database().ref(`/items/${itemId}`);\n    itemRef.remove();\n  }\n  render() {\n    return (\n      <div className='app'>\n        <header>\n            <div className=\"wrapper\">\n              <h1>לומדים למבחן בפסיכולוגיה</h1>\n                             \n            </div>\n        </header>\n        <div className='container'>\n\n          <section className='add-item'>\n                <form onSubmit={this.handleSubmit}>\n                  <input type=\"text\" name=\"username\" placeholder=\"שאלה\" onChange={this.handleChange} value={this.state.username} />\n                  <input type=\"text\" name=\"currentItem\" placeholder=\"תשובה\" onChange={this.handleChange} value={this.state.currentItem} />\n                  <button>הוסף</button>\n                </form>\n          </section>\n\t\t\t<section className='display-item'>\n              <p><div className=\"wrapper\">\n                <ul>\n                  {this.state.items.map((item) => {\n                    return (\n                      <li key={item.id}>\n\t\t\t\t\t\t<h3><b>{item.user}</b></h3>\n                        <div>{item.title}</div>\n                        <p>\n                          <button onClick={() => this.removeItem(item.id)}>מחק</button>\n                        </p>\n                      </li>\n                    )\n                  })}\n                </ul>\n              </div></p>\n          </section>\n\n        </div>\n      </div>\n    );\n  }\n}\nexport default App;\n",{"ruleId":"19","replacedBy":"20"},{"ruleId":"21","replacedBy":"22"},{"ruleId":"23","severity":1,"message":"24","line":2,"column":8,"nodeType":"25","messageId":"26","endLine":2,"endColumn":12},"no-native-reassign",["27"],"no-negated-in-lhs",["28"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]